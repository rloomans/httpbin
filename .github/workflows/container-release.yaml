name: "Container Release"

on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  release:
    strategy:
      matrix:
        containers:
          - tag: latest
            file: Dockerfile
          - tag: alpine
            file: Dockerfile.alpine
          - tag: nginx
            file: Dockerfile.nginx
          - tag: unit
            file: Dockerfile.unit
          - tag: httpd
            file: Dockerfile.httpd
          - tag: httpd-alpine
            file: Dockerfile.httpd-alpine

    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            rloomans/httpbin
            ghcr.io/rloomans/httpbin
          flavor: |
            latest=${{ matrix.containers.tag == 'latest' }}
            prefix=${{ matrix.containers.tag != 'latest' && format('{0}-', matrix.containers.tag) || '' }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Australia/Brisbane'}}
            type=sha
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.containers.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.meta.outputs.tags }}
            rloomans/httpbin:${{ matrix.containers.tag }}
            ghcr.io/rloomans/httpbin:${{ matrix.containers.tag }}      
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          # docker... https://github.com/peter-evans/dockerhub-description/issues/10
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: rloomans/httpbin
